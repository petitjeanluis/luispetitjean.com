{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport var NavbarState = /*#__PURE__*/(() => {\n  (function (NavbarState) {\n    NavbarState[NavbarState[\"DARK\"] = 0] = \"DARK\";\n    NavbarState[NavbarState[\"LIGHT\"] = 1] = \"LIGHT\";\n  })(NavbarState || (NavbarState = {}));\n  return NavbarState;\n})();\nexport var BackgroundColor = /*#__PURE__*/(() => {\n  (function (BackgroundColor) {\n    BackgroundColor[BackgroundColor[\"DARK\"] = 0] = \"DARK\";\n    BackgroundColor[BackgroundColor[\"LIGHT\"] = 1] = \"LIGHT\";\n  })(BackgroundColor || (BackgroundColor = {}));\n  return BackgroundColor;\n})();\nexport var MenuPosition = /*#__PURE__*/(() => {\n  (function (MenuPosition) {\n    MenuPosition[MenuPosition[\"OPEN\"] = 0] = \"OPEN\";\n    MenuPosition[MenuPosition[\"CLOSED\"] = 1] = \"CLOSED\";\n  })(MenuPosition || (MenuPosition = {}));\n  return MenuPosition;\n})();\nexport let NavbarStateService = /*#__PURE__*/(() => {\n  class NavbarStateService {\n    constructor() {\n      this.backgroundColor = BackgroundColor.DARK;\n      this.menuPosition = MenuPosition.CLOSED;\n      this.navbarState = new BehaviorSubject(NavbarState.LIGHT);\n    }\n    setBackgroundColor(newBackgroundColor) {\n      this.backgroundColor = newBackgroundColor;\n      this.updateNavbarState();\n    }\n    setMenuPosition(newMenuPosition) {\n      this.menuPosition = newMenuPosition;\n      this.updateNavbarState();\n    }\n    getBackgroundColor() {\n      return this.backgroundColor;\n    }\n    updateNavbarState() {\n      if (this.backgroundColor == BackgroundColor.LIGHT && this.menuPosition == MenuPosition.CLOSED) {\n        this.navbarState.next(NavbarState.DARK);\n      } else {\n        this.navbarState.next(NavbarState.LIGHT);\n      }\n    }\n    getObservable() {\n      return this.navbarState.asObservable();\n    }\n  }\n  NavbarStateService.ɵfac = function NavbarStateService_Factory(t) {\n    return new (t || NavbarStateService)();\n  };\n  NavbarStateService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: NavbarStateService,\n    factory: NavbarStateService.ɵfac\n  });\n  return NavbarStateService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}